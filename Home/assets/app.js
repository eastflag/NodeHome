angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(e){e.$on("login",function(s,o){e.currentUser=o})}]),angular.module("app").config(["$routeProvider","$locationProvider",function(e,s){e.when("/",{controller:"UserCtrl",templateUrl:"/templates/user.html"}).when("/user",{controller:"UserCtrl",templateUrl:"/templates/user.html"}),s.html5Mode(!0)}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc",function(e,s){function o(s){for(var o=0;o<e.users.length;++o)console.log("user:"+e.users[o]._id),s==e.users[o]._id&&(e.users[o].name=e.name,e.users[o].password=e.password)}function r(s){console.log("delete userId:"+s);for(var o=0;o<e.users.length;++o)if(console.log("user:"+e.users[o]._id),s==e.users[o]._id)return console.log("deleted"),void e.users.splice(o,1)}e.edit=!1,e.deleteId,s.fetch().success(function(s){e.users=s}),e.saveUser=function(){e.edit?s.modify({_id:e.id,name:e.name,password:e.password}).success(function(s){o(e.id),e.id=null,e.name=null,e.password=null,e.edit=!1}):s.create({_id:e.id,name:e.name,password:e.password}).success(function(s){e.users.unshift(s),e.id=null,e.name=null,e.password=null})},e.editUser=function(s){e.edit=!0,e.id=s._id,e.name=s.name,e.password=s.password},e.deleteConfirm=function(s){console.log("userId:"+s._id),e.deleteId=s._id,$("#dialogDelete").modal("show")},e.deleteUser=function(){$("#dialogDelete").modal("hide"),s.remove({_id:e.deleteId}).success(function(s){r(e.deleteId)})}}]),angular.module("app").service("UserSvc",["$http",function(e){this.fetch=function(){return e.post("/api/user/getList")},this.create=function(s){return e.post("/api/user/add",s)},this.modify=function(s){return e.post("/api/user/modify",s)},this.remove=function(s){return e.post("/api/user/remove",s)}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLmN0cmwuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiaHRtbDVNb2RlIiwiVXNlclN2YyIsInJlZnJlc2hVcGRhdGUiLCJ1c2VySWQiLCJpIiwidXNlcnMiLCJsZW5ndGgiLCJjb25zb2xlIiwibG9nIiwiX2lkIiwibmFtZSIsInBhc3N3b3JkIiwicmVmcmVzaERlbGV0ZSIsInNwbGljZSIsImVkaXQiLCJkZWxldGVJZCIsImZldGNoIiwic3VjY2VzcyIsInNhdmVVc2VyIiwibW9kaWZ5IiwiaWQiLCJkYXRhIiwiY3JlYXRlIiwidW5zaGlmdCIsImVkaXRVc2VyIiwiZGVsZXRlQ29uZmlybSIsIiQiLCJtb2RhbCIsImRlbGV0ZVVzZXIiLCJyZW1vdmUiLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwicG9zdCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVFDLE9BQU8sT0FDWCxZQ0RKRCxRQUFRQyxPQUFPLE9BQ2RDLFdBQVcsbUJBQUEsU0FBbUIsU0FBVUMsR0FDeENBLEVBQU9DLElBQUksUUFBUyxTQUFVQyxFQUFHQyxHQUNoQ0gsRUFBT0ksWUFBY0QsT0NIdkJOLFFBQVFDLE9BQU8sT0FDZE8sUUFBUyxpQkFBa0Isb0JBQXFCLFNBQVVDLEVBQWdCQyxHQUMxRUQsRUFDQ0UsS0FBSyxLQUFNVCxXQUFZLFdBQVlVLFlBQWEseUJBQ2hERCxLQUFLLFNBQVVULFdBQVksV0FBWVUsWUFBYSx5QkFFckRGLEVBQWtCRyxXQUFVLE1DTjdCYixRQUFRQyxPQUFPLE9BQ2RDLFdBQVcsWUFBQSxTQUFBLFVBQVksU0FBU0MsRUFBUVcsR0FvRHhDLFFBQVNDLEdBQWNDLEdBQ3RCLElBQUksR0FBSUMsR0FBRSxFQUFHQSxFQUFJZCxFQUFPZSxNQUFNQyxTQUFXRixFQUN4Q0csUUFBUUMsSUFBSSxRQUFVbEIsRUFBT2UsTUFBTUQsR0FBR0ssS0FDbENOLEdBQVViLEVBQU9lLE1BQU1ELEdBQUdLLE1BQzdCbkIsRUFBT2UsTUFBTUQsR0FBR00sS0FBT3BCLEVBQU9vQixLQUM5QnBCLEVBQU9lLE1BQU1ELEdBQUdPLFNBQVdyQixFQUFPcUIsVUFLckMsUUFBU0MsR0FBY1QsR0FDdEJJLFFBQVFDLElBQUksaUJBQW1CTCxFQUMvQixLQUFJLEdBQUlDLEdBQUUsRUFBR0EsRUFBSWQsRUFBT2UsTUFBTUMsU0FBV0YsRUFFeEMsR0FEQUcsUUFBUUMsSUFBSSxRQUFVbEIsRUFBT2UsTUFBTUQsR0FBR0ssS0FDbENOLEdBQVViLEVBQU9lLE1BQU1ELEdBQUdLLElBRzdCLE1BRkFGLFNBQVFDLElBQUksZUFDWmxCLEdBQU9lLE1BQU1RLE9BQU9ULEVBQUcsR0FuRTFCZCxFQUFPd0IsTUFBTyxFQUNkeEIsRUFBT3lCLFNBRVBkLEVBQVFlLFFBQ1BDLFFBQVEsU0FBU1osR0FDakJmLEVBQU9lLE1BQVFBLElBR2hCZixFQUFPNEIsU0FBVyxXQUNkNUIsRUFBT3dCLEtBQ1RiLEVBQVFrQixRQUFTVixJQUFLbkIsRUFBTzhCLEdBQUtWLEtBQU1wQixFQUFPb0IsS0FBTUMsU0FBVXJCLEVBQU9xQixXQUNyRU0sUUFBUSxTQUFTSSxHQUNqQm5CLEVBQWNaLEVBQU84QixJQUNyQjlCLEVBQU84QixHQUFLLEtBQ1o5QixFQUFPb0IsS0FBTyxLQUNkcEIsRUFBT3FCLFNBQVUsS0FDakJyQixFQUFPd0IsTUFBTyxJQUdmYixFQUFRcUIsUUFBU2IsSUFBS25CLEVBQU84QixHQUFLVixLQUFNcEIsRUFBT29CLEtBQU1DLFNBQVVyQixFQUFPcUIsV0FDckVNLFFBQVEsU0FBU3hCLEdBQ2pCSCxFQUFPZSxNQUFNa0IsUUFBUTlCLEdBQ3JCSCxFQUFPOEIsR0FBSyxLQUNaOUIsRUFBT29CLEtBQU8sS0FDZHBCLEVBQU9xQixTQUFVLFFBTXBCckIsRUFBT2tDLFNBQVcsU0FBUy9CLEdBQzFCSCxFQUFPd0IsTUFBTyxFQUNkeEIsRUFBTzhCLEdBQUszQixFQUFLZ0IsSUFDakJuQixFQUFPb0IsS0FBT2pCLEVBQUtpQixLQUNuQnBCLEVBQU9xQixTQUFVbEIsRUFBS2tCLFVBR3ZCckIsRUFBT21DLGNBQWdCLFNBQVNoQyxHQUMvQmMsUUFBUUMsSUFBSSxVQUFZZixFQUFLZ0IsS0FDN0JuQixFQUFPeUIsU0FBV3RCLEVBQUtnQixJQUN2QmlCLEVBQUUsaUJBQWlCQyxNQUFNLFNBRzFCckMsRUFBT3NDLFdBQWEsV0FDbkJGLEVBQUUsaUJBQWlCQyxNQUFNLFFBQ3pCMUIsRUFBUTRCLFFBQVFwQixJQUFLbkIsRUFBT3lCLFdBQzNCRSxRQUFRLFNBQVNJLEdBQ2pCVCxFQUFjdEIsRUFBT3lCLGdCQ2pEeEI1QixRQUFRQyxPQUFPLE9BQ2QwQyxRQUFRLFdBQUEsUUFBVyxTQUFTQyxHQUM1QkMsS0FBS2hCLE1BQVEsV0FDWixNQUFPZSxHQUFNRSxLQUFLLHNCQUVuQkQsS0FBS1YsT0FBUyxTQUFTN0IsR0FDdEIsTUFBT3NDLEdBQU1FLEtBQUssZ0JBQWlCeEMsSUFFcEN1QyxLQUFLYixPQUFTLFNBQVMxQixHQUN0QixNQUFPc0MsR0FBTUUsS0FBSyxtQkFBb0J4QyxJQUV2Q3VDLEtBQUtILE9BQVMsU0FBU3BDLEdBQ3RCLE1BQU9zQyxHQUFNRSxLQUFLLG1CQUFvQnhDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXHJcbiAgICAnbmdSb3V0ZSdcclxuXSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcblx0JHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbiAoXywgdXNlcikge1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcclxuXHR9KVxyXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29uZmlnKCBbJyRyb3V0ZVByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xyXG5cdCRyb3V0ZVByb3ZpZGVyXHJcblx0LndoZW4oJy8nLCB7Y29udHJvbGxlcjogJ1VzZXJDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL3VzZXIuaHRtbCd9KVxyXG5cdC53aGVuKCcvdXNlcicsIHtjb250cm9sbGVyOiAnVXNlckN0cmwnLCB0ZW1wbGF0ZVVybDogJy90ZW1wbGF0ZXMvdXNlci5odG1sJ30pXHJcblx0XHJcblx0JGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xyXG59XSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdVc2VyQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlclN2Yyl7XHJcblx0JHNjb3BlLmVkaXQgPSBmYWxzZTtcclxuXHQkc2NvcGUuZGVsZXRlSWQ7XHJcblx0XHJcblx0VXNlclN2Yy5mZXRjaCgpXHJcblx0LnN1Y2Nlc3MoZnVuY3Rpb24odXNlcnMpIHtcclxuXHRcdCRzY29wZS51c2VycyA9IHVzZXJzO1xyXG5cdH0pXHJcblxyXG5cdCRzY29wZS5zYXZlVXNlciA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdGlmKCRzY29wZS5lZGl0KSB7ICAvL+yImOyglVxyXG5cdFx0XHRVc2VyU3ZjLm1vZGlmeSh7IF9pZDogJHNjb3BlLmlkLCAgbmFtZTogJHNjb3BlLm5hbWUsIHBhc3N3b3JkOiAkc2NvcGUucGFzc3dvcmQgfSlcclxuXHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdFx0cmVmcmVzaFVwZGF0ZSgkc2NvcGUuaWQpO1xyXG5cdFx0XHRcdCRzY29wZS5pZCA9IG51bGw7XHJcblx0XHRcdFx0JHNjb3BlLm5hbWUgPSBudWxsO1xyXG5cdFx0XHRcdCRzY29wZS5wYXNzd29yZCA9bnVsbDtcclxuXHRcdFx0XHQkc2NvcGUuZWRpdCA9IGZhbHNlO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0gZWxzZSB7IC8v7IOd7ISxXHJcblx0XHRcdFVzZXJTdmMuY3JlYXRlKHsgX2lkOiAkc2NvcGUuaWQsICBuYW1lOiAkc2NvcGUubmFtZSwgcGFzc3dvcmQ6ICRzY29wZS5wYXNzd29yZCB9KVxyXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbih1c2VyKXtcclxuXHRcdFx0XHQkc2NvcGUudXNlcnMudW5zaGlmdCh1c2VyKTtcclxuXHRcdFx0XHQkc2NvcGUuaWQgPSBudWxsO1xyXG5cdFx0XHRcdCRzY29wZS5uYW1lID0gbnVsbDtcclxuXHRcdFx0XHQkc2NvcGUucGFzc3dvcmQgPW51bGw7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0fVxyXG5cdFxyXG5cdCRzY29wZS5lZGl0VXNlciA9IGZ1bmN0aW9uKHVzZXIpIHtcclxuXHRcdCRzY29wZS5lZGl0ID0gdHJ1ZTtcclxuXHRcdCRzY29wZS5pZCA9IHVzZXIuX2lkO1xyXG5cdFx0JHNjb3BlLm5hbWUgPSB1c2VyLm5hbWU7XHJcblx0XHQkc2NvcGUucGFzc3dvcmQgPXVzZXIucGFzc3dvcmQ7XHJcblx0fVxyXG5cdFxyXG5cdCRzY29wZS5kZWxldGVDb25maXJtID0gZnVuY3Rpb24odXNlcikge1xyXG5cdFx0Y29uc29sZS5sb2coJ3VzZXJJZDonICsgdXNlci5faWQpO1xyXG5cdFx0JHNjb3BlLmRlbGV0ZUlkID0gdXNlci5faWQ7XHJcblx0XHQkKFwiI2RpYWxvZ0RlbGV0ZVwiKS5tb2RhbCgnc2hvdycpO1xyXG5cdH1cclxuXHRcclxuXHQkc2NvcGUuZGVsZXRlVXNlciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0JChcIiNkaWFsb2dEZWxldGVcIikubW9kYWwoJ2hpZGUnKTtcclxuXHRcdFVzZXJTdmMucmVtb3ZlKHtfaWQ6ICRzY29wZS5kZWxldGVJZH0pXHJcblx0XHQuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0cmVmcmVzaERlbGV0ZSgkc2NvcGUuZGVsZXRlSWQpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdFxyXG5cdGZ1bmN0aW9uIHJlZnJlc2hVcGRhdGUodXNlcklkKSB7XHJcblx0XHRmb3IodmFyIGk9MDsgaSA8ICRzY29wZS51c2Vycy5sZW5ndGggOyArK2kpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coJ3VzZXI6JyArICRzY29wZS51c2Vyc1tpXS5faWQpO1xyXG5cdFx0XHRpZiAodXNlcklkID09ICRzY29wZS51c2Vyc1tpXS5faWQpIHtcclxuXHRcdFx0XHQkc2NvcGUudXNlcnNbaV0ubmFtZSA9ICRzY29wZS5uYW1lO1xyXG5cdFx0XHRcdCRzY29wZS51c2Vyc1tpXS5wYXNzd29yZCA9ICRzY29wZS5wYXNzd29yZDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHRcclxuXHRmdW5jdGlvbiByZWZyZXNoRGVsZXRlKHVzZXJJZCkge1xyXG5cdFx0Y29uc29sZS5sb2coJ2RlbGV0ZSB1c2VySWQ6JyArIHVzZXJJZCk7XHJcblx0XHRmb3IodmFyIGk9MDsgaSA8ICRzY29wZS51c2Vycy5sZW5ndGggOyArK2kpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coJ3VzZXI6JyArICRzY29wZS51c2Vyc1tpXS5faWQpO1xyXG5cdFx0XHRpZiAodXNlcklkID09ICRzY29wZS51c2Vyc1tpXS5faWQpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZygnZGVsZXRlZCcpO1xyXG5cdFx0XHRcdCRzY29wZS51c2Vycy5zcGxpY2UoaSwgMSk7IC8vaeuyiOynuOu2gO2EsCDtla3rqqnsnYQgMeqwnCDsgq3soJxcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uKCRodHRwKSB7XG5cdHRoaXMuZmV0Y2ggPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VyL2dldExpc3QnKTtcblx0fVxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKHVzZXIpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VyL2FkZCcsIHVzZXIpO1xuXHR9XG5cdHRoaXMubW9kaWZ5ID0gZnVuY3Rpb24odXNlcikge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXIvbW9kaWZ5JywgdXNlcik7XG5cdH1cblx0dGhpcy5yZW1vdmUgPSBmdW5jdGlvbih1c2VyKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlci9yZW1vdmUnLCB1c2VyKTtcblx0fVxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9