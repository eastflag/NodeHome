angular.module("app",["ngRoute"]),angular.module("app").controller("MainCtrl",["$scope",function(e){}]),angular.module("app").controller("PointCtrl",["$scope","PointSvc",function(e,t){e.pointList=[],e.travelList=[],e.locationList=[],e.getRankingList=function(){t.getRankingList().success(function(t){e.pointList=t.data})},e.getRankingList(),e.viewTravel=function(o){console.log("viewTravel"),t.getTravelList({userId:o}).success(function(t){e.travelList=t.data})},e.viewMap=function(o){console.log("travelId:"+o),t.getLocationList({travelId:o}).success(function(t){var o=t.data,i=new google.maps.LatLng(o[0].lat,o[0].lng),a=new google.maps.LatLng(o[o.length-1].lat,o[o.length-1].lng),n={zoom:14,center:a,mapTypeId:google.maps.MapTypeId.TERRAIN};e.map=new google.maps.Map(document.getElementById("map"),n);var r=new google.maps.Marker({position:i}),l=new google.maps.Marker({position:a,animation:google.maps.Animation.BOUNCE});r.setMap(e.map),l.setMap(e.map);for(var u=[],s=0;s<o.length;++s)u[s]={lat:o[s].lat,lng:o[s].lng};var c=new google.maps.Polyline({path:u,geodesic:!0,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:3});c.setMap(e.map)})}}]),angular.module("app").service("PointSvc",["$http",function(e){this.getRankingList=function(){return e.post("/api/lol/point/getRankingList")},this.getTravelList=function(t){return e.post("/api/lol/travel/getlist",t)},this.getLocationList=function(t){return e.post("/api/lol/location/getlist",t)}}]),angular.module("app").controller("ResidenceCtrl",["$scope","ResidenceSvc",function(e,t){e.getTraffic=function(){t.getTraffic().success(function(e){for(var t=e.data,o=[{period:"아주불만족",value:0},{period:"불만족",value:0},{period:"보통",value:0},{period:"만족",value:0},{period:"매우만족",value:0}],i=0;i<t.length;++i)"1"==t[i]._id.value?o[0].value=t[i].count:"2"==t[i]._id.value?o[1].value=t[i].count:"3"==t[i]._id.value?o[2].value=t[i].count:"4"==t[i]._id.value?o[3].value=t[i].count:"5"==t[i]._id.value&&(o[4].value=t[i].count);Morris.Bar({element:"morris-traffic-chart",data:o,xkey:"period",ykeys:["value"],labels:["대중교통 만족도"],pointSize:2,hideHover:"auto",resize:!0})})},e.getCommercial=function(){t.getCommercial().success(function(e){for(var t=e.data,o=[{period:"아주불만족",value:0},{period:"불만족",value:0},{period:"보통",value:0},{period:"만족",value:0},{period:"매우만족",value:0}],i=0;i<t.length;++i)"1"==t[i]._id.value?o[0].value=t[i].count:"2"==t[i]._id.value?o[1].value=t[i].count:"3"==t[i]._id.value?o[2].value=t[i].count:"4"==t[i]._id.value?o[3].value=t[i].count:"5"==t[i]._id.value&&(o[4].value=t[i].count);Morris.Bar({element:"morris-commercial-chart",data:o,xkey:"period",ykeys:["value"],labels:["대중교통 만족도"],pointSize:2,hideHover:"auto",resize:!0})})},e.getLeisure=function(){t.getLeisure().success(function(e){for(var t=e.data,o=[{period:"아주불만족",value:0},{period:"불만족",value:0},{period:"보통",value:0},{period:"만족",value:0},{period:"매우만족",value:0}],i=0;i<t.length;++i)"1"==t[i]._id.value?o[0].value=t[i].count:"2"==t[i]._id.value?o[1].value=t[i].count:"3"==t[i]._id.value?o[2].value=t[i].count:"4"==t[i]._id.value?o[3].value=t[i].count:"5"==t[i]._id.value&&(o[4].value=t[i].count);Morris.Bar({element:"morris-leisure-chart",data:o,xkey:"period",ykeys:["value"],labels:["대중교통 만족도"],pointSize:2,hideHover:"auto",resize:!0})})},e.getGreen=function(){t.getGreen().success(function(e){for(var t=e.data,o=[{period:"아주불만족",value:0},{period:"불만족",value:0},{period:"보통",value:0},{period:"만족",value:0},{period:"매우만족",value:0}],i=0;i<t.length;++i)"1"==t[i]._id.value?o[0].value=t[i].count:"2"==t[i]._id.value?o[1].value=t[i].count:"3"==t[i]._id.value?o[2].value=t[i].count:"4"==t[i]._id.value?o[3].value=t[i].count:"5"==t[i]._id.value&&(o[4].value=t[i].count);Morris.Bar({element:"morris-green-chart",data:o,xkey:"period",ykeys:["value"],labels:["녹지 만족도"],pointSize:2,hideHover:"auto",resize:!0})})},e.getArea=function(){t.getArea().success(function(e){for(var t=e.data,o=[{period:"49.5m2이하",value:0},{period:"49.58~59.4m2",value:0},{period:"59.5~79.32m2",value:0},{period:"79.33~105.78m2",value:0},{period:"105.79m2~",value:0}],i=0;i<t.length;++i)"1"==t[i]._id.value?o[0].value=t[i].count:"2"==t[i]._id.value?o[1].value=t[i].count:"3"==t[i]._id.value?o[2].value=t[i].count:"4"==t[i]._id.value?o[3].value=t[i].count:"5"==t[i]._id.value&&(o[4].value=t[i].count);Morris.Bar({element:"morris-area-chart",data:o,xkey:"period",ykeys:["value"],labels:["거주면적"],pointSize:2,hideHover:"auto",resize:!0})})},e.getTraffic(),e.getCommercial(),e.getLeisure(),e.getGreen(),e.getArea()}]),angular.module("app").service("ResidenceSvc",["$http",function(e){this.getTraffic=function(){return e.post("/api/lol/admin/getResicence/traffic")},this.getCommercial=function(){return e.post("/api/lol/admin/getResicence/commercial")},this.getLeisure=function(){return e.post("/api/lol/admin/getResicence/leisure")},this.getGreen=function(){return e.post("/api/lol/admin/getResicence/green")},this.getArea=function(){return e.post("/api/lol/admin/getResicence/area")}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"templates/admin.html"}).when("/social",{templateUrl:"templates/social.html"}).when("/residence",{templateUrl:"templates/residence.html"}).when("/point",{templateUrl:"templates/point.html"}),t.html5Mode(!1),t.hashPrefix("!")}]),angular.module("app").controller("SocialCtrl",["$scope","SocialSvc",function(e,t){e.getSex=function(){t.getSex().success(function(e){var t=e.data;console.log("sex data:"+t[0]._id.sex);for(var o=[],i=0;i<t.length;++i)if(1==t[i]._id.sex){var a={label:"여자",data:t[i].count};o.push(a)}else{var n={label:"남자",data:t[i].count};o.push(n)}$.plot($("#flot-pie-chart-sex"),o,{series:{pie:{show:!0}},grid:{hoverable:!0},tooltip:!0,tooltipOpts:{content:"%p.0%, %s",shifts:{x:20,y:0},defaultTheme:!1}})})},e.getDrive=function(){t.getDrive().success(function(e){var t=e.data;console.log("drive data:"+t[0]._id.drive_license);for(var o=[{label:"운전면허 소지",data:0},{label:"운전면허 미소지",data:0}],i=0;i<t.length;++i)1==t[i]._id.drive_license?o[0].data=t[i].count:o[1].data=t[i].count;$.plot($("#flot-pie-chart-drive"),o,{series:{pie:{show:!0}},grid:{hoverable:!0},tooltip:!0,tooltipOpts:{content:"%p.0%, %s",shifts:{x:20,y:0},defaultTheme:!1}})})},e.getAge=function(){t.getAge().success(function(e){for(var t=e.data,o=[{period:"0-19",age:0},{period:"20-29",age:0},{period:"30-39",age:0},{period:"40-49",age:0},{period:"50-59",age:0},{period:"60-",age:0}],i=0;i<t.length;++i)"range 0-19"==t[i]._id?o[0].age=t[i].count:"range 20-29"==t[i]._id?o[1].age=t[i].count:"range 30-39"==t[i]._id?o[2].age=t[i].count:"range 40-49"==t[i]._id?o[3].age=t[i].count:"range 50-59"==t[i]._id?o[4].age=t[i].count:o[5].age=t[i].count;Morris.Bar({element:"morris-age-chart",data:o,xkey:"period",ykeys:["age"],labels:["연령대"],pointSize:2,hideHover:"auto",resize:!0})})},e.getIncome=function(){t.getIncome().success(function(e){for(var t=e.data,o=[{period:"~1백만",income:0},{period:"1백~2백만",income:0},{period:"2백-3백만",income:0},{period:"3백-5백만",income:0},{period:"5백-1천만",income:0},{period:"1천만이상",income:0}],i=0;i<t.length;++i)"range 0-100"==t[i]._id?o[0].income=t[i].count:"range 100-200"==t[i]._id?o[1].income=t[i].count:"range 200-300"==t[i]._id?o[2].income=t[i].count:"range 300-500"==t[i]._id?o[3].income=t[i].count:"range 500-1000"==t[i]._id?o[4].income=t[i].count:o[5].income=t[i].count;Morris.Bar({element:"morris-income-chart",data:o,xkey:"period",ykeys:["income"],labels:["수입"],pointSize:2,hideHover:"auto",resize:!0})})},e.getSex(),e.getDrive(),e.getAge(),e.getIncome()}]),angular.module("app").service("SocialSvc",["$http",function(e){this.getSex=function(){return e.post("/api/lol/admin/getSocial/sex")},this.getDrive=function(){return e.post("/api/lol/admin/getSocial/drive")},this.getAge=function(){return e.post("/api/lol/admin/getSocial/age")},this.getIncome=function(){return e.post("/api/lol/admin/getSocial/income")}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc",function(e,t){function o(t){for(var o=0;o<e.users.length;++o)console.log("user:"+e.users[o]._id),t==e.users[o]._id&&(e.users[o].name=e.name,e.users[o].password=e.password)}function i(t){console.log("delete userId:"+t);for(var o=0;o<e.users.length;++o)if(console.log("user:"+e.users[o]._id),t==e.users[o]._id)return console.log("deleted"),void e.users.splice(o,1)}e.edit=!1,e.deleteId,t.fetch().success(function(t){e.users=t}),e.saveUser=function(){e.edit?t.modify({_id:e.id,name:e.name,password:e.password}).success(function(t){o(e.id),e.id=null,e.name=null,e.password=null,e.edit=!1}):t.create({_id:e.id,name:e.name,password:e.password}).success(function(t){e.users.unshift(t),e.id=null,e.name=null,e.password=null})},e.editUser=function(t){e.edit=!0,e.id=t._id,e.name=t.name,e.password=t.password},e.deleteConfirm=function(t){console.log("userId:"+t._id),e.deleteId=t._id,$("#dialogDelete").modal("show")},e.deleteUser=function(){$("#dialogDelete").modal("hide"),t.remove({_id:e.deleteId}).success(function(t){i(e.deleteId)})}}]),angular.module("app").service("UserSvc",["$http",function(e){this.fetch=function(){return e.post("/api/user/getList")},this.create=function(t){return e.post("/api/user/add",t)},this.modify=function(t){return e.post("/api/user/modify",t)},this.remove=function(t){return e.post("/api/user/remove",t)}}]);
//# sourceMappingURL=data:application/json;base64,
